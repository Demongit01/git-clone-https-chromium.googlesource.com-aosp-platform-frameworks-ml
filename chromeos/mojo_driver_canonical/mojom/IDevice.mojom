// Copyright 2022 The ChromiumOS Authors.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This is a Mojo representation of the NNAPI HAL CANONICAL API
// (https://chromium.googlesource.com/aosp/platform/frameworks/ml/+/refs/heads/main/common/types/include/nnapi/)

module chromeos.nnapi.canonical.mojom;

import "aosp/frameworks/ml/chromeos/mojo_driver_canonical/mojom/Types.mojom";
import "aosp/frameworks/ml/chromeos/mojo_driver_canonical/mojom/IPreparedModel.mojom";

interface IDevice {
  getCapabilities() => (Capabilities capabilities);
  getVersionString() => (string version);
  getFeatureLevel() => (Version featureLevel);
  getType() => (DeviceType type);
  getSupportedExtensions() => (array<Extension> extensions);
  getNumberOfCacheFilesNeeded() => (uint32 numModelCache, uint32 numDataCache);
  wait() => (GeneralError status);
  getSupportedOperations(Model model)
          => (GeneralError generalError, array<bool> supportedOperations);
  prepareModel(
          Model model, ExecutionPreference preference, Priority priority,
          TimePoint? deadline, array<NnHandle> modelCache,
          array<NnHandle> dataCache, CacheToken token,
          array<TokenValuePair> hints,
          array<ExtensionNameAndPrefix> extensionNameToPrefix)
          => (GeneralError generalError, pending_remote<IPreparedModel>? preparedModel);
  prepareModelFromCache(
          TimePoint? deadline, array<NnHandle> modelCache,
          array<NnHandle> dataCache, CacheToken token)
          => (GeneralError generalError, pending_remote<IPreparedModel>? preparedModel);
};
